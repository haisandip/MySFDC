{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"cmp"
			],
			[
				"set",
				"setParam"
			],
			[
				"va",
				"value"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/aura/appEvent/appEvent.evt",
			"settings":
			{
				"buffer_size": 177,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/aura/appEvent/appEvent.evt-meta.xml",
			"settings":
			{
				"buffer_size": 228,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/aura/PayrollComponent/PayrollComponent.cmp",
			"settings":
			{
				"buffer_size": 696,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/aura/MyTestComp/MyTestComp.cmp",
			"settings":
			{
				"buffer_size": 4755,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "({\n    doInit :function(cmp, evt, helper) {\n        var action = cmp.get(\"c.getEmployeeList\");\n        action.setCallback(cmp,function(response){\n            if(response.getState()==\"SUCCESS\")\n            {\n                cmp.set(\"v.emps\",response.getReturnValue());\n            }\n        });\n        $A.enqueueAction(action);\n    },\n    removeItem : function(cmp,evt,helper)\n    {\n        var list = cmp.get(\"v.newemps\");\n        list.splice(evt.target.id,1);\n        cmp.set(\"v.newemps\",list);\n    }\n    ,\n    addnew : function (cmp,evt,helper)\n    {\n        \n        /*var action = cmp.get(\"c.addNewEmpInList\");\n        action.setParam(\"empList\",cmp.get(\"v.newemps\"));\n        action.setParam(\"savedOnce\",false);\n        action.setCallback(cmp,function(response){\n            if(response.getState()==\"SUCCESS\")\n            {\n                cmp.set(\"v.newemps\",response.getReturnValue());\n                cmp.set(\"v.showAdd\",\"true\");\n            }\n        });\n        $A.enqueueAction(action);\n        */\n        var emplist = cmp.get(\"v.newemps\");\n        emplist.push([{\"name\":\"\",\"age\":0,\"salary\":0}]);\n        cmp.set(\"v.newemps\",emplist);\n    }\n    ,\n    saveEmp : function(cmp,evt,helper){\n        var action = cmp.get(\"c.saveMyEmployee\");\n\n        action.setParam(\"oldList\",cmp.get(\"v.emps\"));\n        action.setParam(\"newListStr\",JSON.stringify(cmp.get(\"v.newemps\")));\n        cmp.set(\"v.newemps\",[]);\n        action.setCallback(cmp,function(response){\n            \n            if(response.getState()==\"SUCCESS\")\n            {\n                cmp.set(\"v.emps\",response.getReturnValue());\n                cmp.set(\"v.showAdd\",\"false\");\n                //cmp.set(\"v.savedOnce\",\"true\");\n            }\n        });\n        $A.enqueueAction(action);\n        \n    }\n    ,\n    showHelp : function(cmp, evt, helper) {\n        \n        var cmptgt = cmp.find(\"help\");\n        $A.util.removeClass(cmptgt , \"slds-hide\");\n        $A.util.addClass(cmptgt ,\"slds-visible\");\n    }\n    ,\n    hideHelp : function(cmp, evt, helper) {\n        var cmptgt = cmp.find(\"help\");\n        $A.util.addClass(cmptgt , \"slds-hide\");\n        $A.util.removeClass(cmptgt ,\"slds-visible\");\n    }\n})",
			"file": "src/aura/MyTestComp/MyTestCompController.js",
			"file_size": 2171,
			"file_write_time": 131471418779420881,
			"settings":
			{
				"buffer_size": 2172,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 150.0,
		"last_filter": "Package Control: ins",
		"selected_items":
		[
			[
				"Package Control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 432.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/SFDCWork/SFDCDev",
		"/C/SFDCWork/SFDCDev/config",
		"/C/SFDCWork/SFDCDev/debug",
		"/C/SFDCWork/SFDCDev/debug/logs",
		"/C/SFDCWork/SFDCDev/src",
		"/C/SFDCWork/SFDCDev/src/aura",
		"/C/SFDCWork/SFDCDev/src/aura/MyComponent",
		"/C/SFDCWork/SFDCDev/src/aura/MyTestComp"
	],
	"file_history":
	[
		"/C/SFDCWork/SFDCDev/src/classes/MyEmailHandler.cls",
		"/C/SFDCWork/SFDCDev/src/classes/Employee.cls",
		"/C/SFDCWork/SFDCDev/src/classes/MySalaryController.cls",
		"/C/SFDCWork/SFDCDev/src/classes/MyController.cls",
		"/C/Users/IBM_ADMIN/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/SFDCWork/SFDCDev/src/classes/wwwWebservicexNet.cls",
		"/C/SFDCWork/SFDCDev/src/classes/ChangePasswordController.cls",
		"/C/SFDCWork/SFDCDev/src/classes/CommunitiesLandingControllerTest.cls",
		"/C/Users/IBM_ADMIN/AppData/Roaming/Sublime Text 3/Packages/User/mavensmate.sublime-settings",
		"/C/Users/IBM_ADMIN/AppData/Roaming/Sublime Text 3/Packages/MavensMate/sublime/settings-help.txt"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.cls",
			"*.class",
			"*.trigger,*.class,-*test*.class",
			"*.trigger,*.class,,-*test*.class",
			"*"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Controller\n",
			"Searching 68 files for \"Controller\"\n",
			"Controller",
			"controller"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/aura/appEvent/appEvent.evt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 177,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/aura/appEvent/appEvent.evt-meta.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 228,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/aura/PayrollComponent/PayrollComponent.cmp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 696,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/aura/MyTestComp/MyTestComp.cmp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4755,
						"regions":
						{
						},
						"selection":
						[
							[
								4737,
								4737
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 779.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/aura/MyTestComp/MyTestCompController.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2172,
						"regions":
						{
						},
						"selection":
						[
							[
								1762,
								1762
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.MavensMate-OutputPanel":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 259.0
	},
	"pinned_build_system": "",
	"project": "SFDCDev.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 463.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
